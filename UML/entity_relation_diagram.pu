@startuml "Optimized PostgreSQL Schema with Content Type Association"
!theme carbon-gray

entity User {
  +id: SERIAL <<PK>>
  +name: VARCHAR(100)
  +last_name: VARCHAR(100)
  +email: VARCHAR(255) UNIQUE
  +password: VARCHAR(255)
  +status: UserStatus
  +company_name: VARCHAR(255)
  +role_id: INTEGER <<FK>>
  +created_at: TIMESTAMP
}

entity Role {
  +id: SERIAL <<PK>>
  +name: VARCHAR(50) UNIQUE
}

entity Course {
  +id: SERIAL <<PK>>
  +title: VARCHAR(255)
  +description: TEXT
  +status: CourseStatus
  +tutor_id: INTEGER <<FK>>
  +created_at: TIMESTAMP
  +updated_at: TIMESTAMP
}

entity Module {
  +id: SERIAL <<PK>>
  +course_id: INTEGER <<FK>>
  +title: VARCHAR(255)
  +content_type: ContentType
  +order: INTEGER
}

entity VideoContent {
  +id: SERIAL <<PK>>
  +module_id : INTEGER <<FK>>
  +url: VARCHAR(255)
  +duration: INTEGER
}

entity PDFContent {
  +id: SERIAL <<PK>>
  +module_id : INTEGER <<FK>>
  +file_path: VARCHAR(255)
  +page_count: INTEGER
}

entity WebLink {
  +id: SERIAL <<PK>>
  +module_id : INTEGER <<FK>>
  +description: TEXT
  +url: VARCHAR(255)
}

entity Message {
  +id: SERIAL <<PK>>
  +sender_id: INTEGER <<FK>>
  +receiver_id: INTEGER <<FK>>
  +content: TEXT
  +timestamp: TIMESTAMP
  +status: MessageStatus
}

entity Notification {
  +id: SERIAL <<PK>>
  +user_id: INTEGER <<FK>>
  +content: TEXT
  +timestamp: TIMESTAMP
  +status: NotificationStatus
  +type: VARCHAR(50)
}

entity Collaboration {
  +id: SERIAL <<PK>>
  +learner_id: INTEGER <<FK>>
  +tutor_id: INTEGER <<FK>>
  +created_at: TIMESTAMP
  +status: CollaborationStatus
}

entity Progress {
  +id: SERIAL <<PK>>
  +user_id: INTEGER <<FK>>
  +course_id: INTEGER <<FK>>
  +module_id: INTEGER <<FK>>
  +completion_status: CompletionStatus
  +last_accessed_at: TIMESTAMP 
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum CourseStatus {
  ACTIVE
  INACTIVE
}

enum ContentType {
  VIDEO
  PDF
  WEBLINK
}

enum MessageStatus {
  READ
  UNREAD
  DELETED
}

enum NotificationStatus {
  SEEN
  UNSEEN
}

enum CollaborationStatus {
  ACTIVE
  INACTIVE
}

enum CompletionStatus {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}

User ||--o{ Progress : "A user tracks progress in multiple courses"
Course ||--o{ Progress : "A course has progress tracked by multiple users"
Module ||--o{ Progress : "Progress is tracked per module"

User ||--|| Role : "1" has "many"
User ||--o{ Message : "1" sends "many"
User ||--o{ Message : "1" receives "many"
User ||--o{ Notification : "1" notifies "many"
User ||--o{ Course : "1 teaches many courses"

Course ||--o{ Module : "1 course has many Modules" 

Collaboration }o--|| User : "A learner has one tutor"
Collaboration ||--o{ User : "A tutor has many learners"

Module ||--o{ VideoContent : "Has"
Module ||--o{ PDFContent : "Has"
Module ||--o{ WebLink : "Has"

note right of Module
content_type determines which content table to use:
- "video" for VideoContent
- "pdf" for PDFContent
- "weblink" for WebLink
end note

@enduml