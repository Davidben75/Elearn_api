@startuml "entity relation SQL + NoSQL"
!theme carbon-gray

entity User {
  +id: number <<PK>>
  +name: string
  +lastname: string
  +email: string
  +password: string
  +status: UserStatus
  +company_name: string
  +role_id: number <<FK>>
  +created_at: Date
}

entity Role {
  +id: number <<PK>>
  +name: string
}

entity Course <<NoSQL>> {
  +id: string ObjectId
  +title: string
  +description: string
  +status: CourseStatus
  +tutor_id: number <<FK>> // Référence à un utilisateur dans PostgreSQL
  +modules: List of Module
  +created_at: Date
  +updated_at: Date
}

entity Module <<NoSQL>> {
  +id: ObjectId
  +content_type: string
  +content_value: string
}

entity Message {
  +id: number <<PK>>
  +sender_id: number <<FK>>
  +receiver_id: number <<FK>>
  +content: string
  +timestamp: Date
  +status: MessageStatus
}

entity Notification {
  +id: number <<PK>>
  +user_id: number <<FK>>
  +content: string
  +timestamp: Date
  +status: NotificationStatus
  +type: string
}

entity Collaboration {
  +id: number <<PK>>
  +collaborator_id: number <<FK>>
  +tutor_id: number <<FK>>
  +created_at: Date
  +status: CollaborationStatus
}

entity Progress {
  +id: number <<PK>>
  +user_id: number <<FK>> // References the User table
  +course_id: string ObjectId <<FK>> // References the Course in NoSQL
  +module_id: string ObjectId <<FK>> // References the Module in NoSQL
  +completion_status: CompletionStatus
  +progress_percentage: float 
  +last_accessed_at: Date 
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum CourseStatus {
  ACTIVE
  INACTIVE
}

enum MessageStatus {
  READ
  UNREAD
  DELETED
}

enum NotificationStatus {
  SEEN
  UNSEEN
}

enum CollaborationStatus {
  ACTIVE
  INACTIVE
}

enum CompletionStatus {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}

User ||--o{ Progress : "A user tracks progress in multiple courses"
Course ||--o{ Progress : "A course has progress tracked by multiple users"
Module ||--o{ Progress : "Progress is tracked per module"

note right of Course
  modules: List of Module
  Chaque Module contient :
    - content_type: string
    - content_value: string
  Choix d'une BDD Mongo car les cours seront évolutifs
end note

User ||--o{ Role : "1" has "many"
User ||--o{ Message : "1" sends "many"
User ||--o{ Message : "1" receives "many"
User ||--o{ Notification : "1" notifies "many"
User ||--o{ Course : "1 enseigne plusieurs cours" // Référence au tutor_id

Course ||--o{ Module : "Un cours contient plusieurs modules" 

Collaboration ||--o{ User : "Un collaborateur a un tuteur"
Collaboration }o--|| User : "Un tuteur a plusieurs collaborateurs"

@enduml