@startuml 'Course creation'

actor Tutor
participant "Tutor Controller" as TutorController
participant "Auth Middleware" as AuthMiddleware
participant "Tutor Service" as TutorService
participant "Course Service" as CourseService
participant "Database" as Database
participant "Email Service" as EmailService
participant "Collaborator Service" as CollaboratorService

Tutor -> TutorController: Request to create course
TutorController -> AuthMiddleware: Validate JWT
alt Session validated
    AuthMiddleware -> TutorController: Session validated
    TutorController -> CourseService: Create course with details (PDF, video link, web page link, text)
    CourseService -> Database: Save course details
    Database -> CourseService: Course saved
    CourseService -> TutorController: Course created successfully

    TutorController -> CollaboratorService: Get list of collaborators
    CollaboratorService -> Database: Fetch collaborators
    Database -> CollaboratorService: Collaborators list
    CollaboratorService -> TutorController: Return collaborators list

    TutorController -> Tutor: Display collaborators list
    Tutor -> TutorController: Choose specific collaborators or all collaborators
    TutorController -> CourseService: Assign collaborators to the course
    CourseService -> Database: Save collaborators for the course
    Database -> CourseService: Collaborators assigned
    CourseService -> TutorController: Collaborators assigned successfully

    TutorController -> EmailService: Send email to selected collaborators
    EmailService -> TutorController: Email sent successfully

    TutorController -> Tutor: Course created and collaborators notified
else Session not validated
    AuthMiddleware -> TutorController: Session not validated
    TutorController -> Tutor: Notify session not validated
end

@enduml
