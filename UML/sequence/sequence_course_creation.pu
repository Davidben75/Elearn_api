@startuml "Course Creation and Module Addition"

actor Tutor
participant "Course Controller" as CourseController
participant "Guards" as Guards
participant "Course Service" as CourseService
participant "Database" as Database

== Course Creation ==
Tutor -> CourseController: Request to create course (title, description)
CourseController -> Guards: Validate JWT and permissions

alt Session validated
    Guards --> CourseController: Session and role validated
    CourseController -> CourseService: Create course with basic details

    CourseService -> Database: Save course basic details
    Database --> CourseService: Course saved

    CourseService --> CourseController: Course created successfully
    CourseController --> Tutor: Notify course created and redirect to editing

else Session not validated
    Guards --> CourseController: Session not validated
    CourseController --> Tutor: Notify session not validated
end

== Module Addition ==
loop Add modules one by one
    Tutor -> CourseController: Request to add module (details, content)
    CourseController -> Guards: Validate JWT and permissions

    alt Session validated
        Guards --> CourseController: Session and role validated
        CourseController -> CourseService: Add module to course
        CourseService -> Database: Save module details
        Database --> CourseService: Module saved
        CourseService --> CourseController: Module added successfully
        CourseController --> Tutor: Confirm module added
    else Session not validated
        Guards --> CourseController: Session not validated
        CourseController --> Tutor: Notify session not validated for module addition
    end
end

@enduml
