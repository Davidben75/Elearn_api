@startuml 'Course creation with centralized service logic'

actor Tutor
participant "Course Controller" as CourseController
participant "Auth Guard" as AuthGuard
participant "Course Service" as CourseService
participant "Database" as Database
participant "Email Service" as EmailService
participant "User Service" as UsersService

Tutor -> CourseController: Request to create course
CourseController -> AuthGuard: Validate JWT and permissions
alt Session validated
    AuthGuard -> CourseController: Session and role validated
    CourseController -> CourseService: Create course with details (PDF, video link, web page link, text)

    CourseService -> Database: Save course details
    Database -> CourseService: Course saved

    CourseService -> UsersService: Get list of collaborators for tutor
    UsersService -> Database: Fetch collaborators
    Database -> UsersService: Collaborators list
    UsersService -> CourseService: Return collaborators list

    CourseService -> Database: Assign collaborators to course
    Database -> CourseService: Collaborators assigned

    CourseService -> EmailService: Send email to all collaborators
    EmailService -> CourseService: Email sent successfully

    CourseService -> CourseController: Course created successfully
    CourseController -> Tutor: Course created and collaborators notified
else Session not validated
    AuthGuard -> CourseController: Session not validated
    CourseController -> Tutor: Notify session not validated
end

@enduml